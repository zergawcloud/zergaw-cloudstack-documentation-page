
Shared FileSystems Management
------------------------------

Creating a New Shared FileSystem 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#. Log in to the UI as a user or administrator.

#. In the left navigation bar, click Storage.

#. In the Select View, choose Shared FileSystems.

Click on Create Shared FileSystem, provide the following details and then click OK.

#. Name
#. Description
#. Zone
#. Format: Filesystem format (XFS, EXT4) which will be installed on the Shared FileSystem.
#. Network: Guest network to which the Shared FileSystem will be attached.
#. Compute offering: Offering using which the Shared FileSystem Instance will be deployed.
#. Disk offering: Offering used by the underlying data volume.
#. Size, MinIops and MaxIos: Displayed only when the disk offering takes custom size and custom iops.

|create-sharedfs.png|


Access
~~~~~~
The Shared FileSystem can be mounted by using the information given on the Access Tab.
|sharedfs-access-tab.png|

Lifecycle Operations 
~~~~~~~~~~~~~~~~~~~~

Supported lifecycle operations are :

#. Update name and description of the Shared FileSystem

#. Stop/Start Shared FileSystem - This will Stop and Start the Shared FileSystem Instance 

#. Restart Shared FileSystem - Reboots the Shared FileSystem Instance. If Cleanup option is provided then the
   Instance state is cleaned up and restored to the original template. Configurations related to setting up the
   NFS export will be done again. This will not affect the data on the volume attached to the Instance.
   |restart-sharedfs.png|

#. Change Disk Offering - The disk offering of the underlying volume can be changed. Whether live resize
   is supported or not depends on the hyervisor.
   Please note that the size of the Shared FileSystem can only be increased.

#. Change Service Offering - The service offering of the Shared FileSystem Instance can be changed as required.
   This can only be done when the Shared FileSystem is in Stopped state.

#. Add/Remove Network - Guest networks can be added to or removed from the Shared FileSystem.
   NFS share is exported to all networks. So instances on different networks can mount the
   same share using the respective IP addresses as given on the Access tab.
   APIs serving these operations are addNicToVirtualMachine and removeNicToVirtualMachine
   called with the Shared FileSystem Instance ID.
   Please note that the added networks must not be on overlapping CIDR ranges.
   |add-remove-sharedfs-network.png|

#. Destroy Shared FileSystem - The Shared FileSystem will be destroyed. It can be recovered before it automatically gets expunged.
   Expunge timeout is given by the global setting 'sharedfs.cleanup.delay'.


Shared FileSystem Instance
~~~~~~~~~~~~~~~~~~~~~~~~~~

The Shared FileSystem Instance is stateless and HA enabled. A new instance is deployed and will start
serving the NFS share if the host or VM goes down.
The VM is installed with the SystemVM template.

The Shared FileSystem Instance can be seen in the Instances Tab as well. It's name is prefixed by the string
"sharedfs-" plus the Shared FileSystem name. Actions that might interfere with Shared FileSystem operations are blocked or not shown.
Basic operations like Start, Stop and Reboot are allowed for troubleshooting.
Users can access the VM using the 'View Console' button for troubleshooting although it is not
required during normal operations.


.. |create-sharedfs.png| image:: /_static/images/create-sharedfs.png
   :alt: Create Shared FileSystem
.. |restart-sharedfs.png| image:: /_static/images/restart-sharedfs.png
   :alt: Restart Shared FileSystem
.. |sharedfs-access-tab.png| image:: /_static/images/sharedfs-access-tab.png
   :alt: Shared FileSystem Access Tab
.. |add-remove-sharedfs-network.png| image:: /_static/images/add-remove-sharedfs-network.png
   :alt: Shared FileSystem Networks
